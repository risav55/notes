# -*- coding: utf-8 -*-
"""Fuzzy Logic - Assignment_6

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fqd4F0BvjVYISciTCCFFTHQsxeK8zVwq
"""

class FuzzySet:
    def __init__(self):
        self.elements = []
        self.memberships = []
    
    def add_element(self, element, membership):
        if membership < 0 or membership > 1:
            print("Invalid membership value. Membership value should be between 0 and 1.")
            again_membership = float(input(f"Enter membership value of {element} AGAIN! (between 0 and 1): "))
            self.elements.append(element)
            self.memberships.append(again_membership)
        else:
            self.elements.append(element)
            self.memberships.append(membership)

    def max_mem(self):
        max_index = self.memberships.index(max(self.memberships))
        max_value = self.elements[max_index]
        print("Deffuz of Set: ", max_value)

    def mean_max(self):
      combined = list(zip(self.elements, self.memberships))

      sorted_combined = sorted(combined, key=lambda x: x[0])

      sorted_element = [x[0] for x in sorted_combined]
      sorted_mem = [x[1] for x in sorted_combined]

      max_members = []
      max_membership = max(sorted_mem)
      for i in range(len(sorted_element)):
          if sorted_mem[i] == max_membership:
              max_members.append(sorted_element[i])

      if(len(max_members) > 1):
        mean_max_value = (float(max_members[0]) + float(max_members[-1])) / 2
      else:
        mean_max_value = max_members

      print("Deffuz of Set: ", mean_max_value)

    def print_set(self):
        for i in range(len(self.elements)):
            print(self.elements[i], self.memberships[i])

set1 = FuzzySet()

n = int(input("Enter the number of elements in set: "))

for i in range(n):
    element = input(f"Enter element {i+1} in set: ")
    membership = float(input(f"Enter membership value of {element} in set A (between 0 and 1): "))
    set1.add_element(element, membership)


print("\nSet:")
set1.print_set()

print("\nMax Membership:")
set1.max_mem()

print("\nMean-Max Membership:")
set1.mean_max()